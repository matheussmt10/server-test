name: deploy

on:
  push:
    branches:
      - develop
      - main
      - homolog
      - 'feature/*'
      - 'feat/*'
      - 'fix/*'
      - 'hotfix/*'

jobs:
  install:
    name: prepare
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Cache node_modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-dev-${{ hashFiles('**/yarn.lock') }}
        
      - name: Install dependencies
        run: yarn install


  quality:
    name: quality
    runs-on: ubuntu-latest
    needs: [install]
    if: needs.${{ matrix.environment }}.result == 'success' 
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Restore node_modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-${{ matrix.environment }}-${{ hashFiles('**/yarn.lock') }}
        
      - name: Run ts-prune 
        run: yarn ts-prune --error
